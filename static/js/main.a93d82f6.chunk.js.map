{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComp.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","console","log","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leaders","leadersLoading","leadersErrMess","Header","state","isNavOpen","isModalOpen","toggleNav","setState","toggleModal","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","onClick","this","NavbarBrand","href","height","width","Collapse","isOpen","navbar","Nav","NavItem","to","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","innerRef","input","check","color","Component","Footer","RenderMenuItem","CardImgOverlay","Menu","menu","dishes","map","i","key","Breadcrumb","BreadcrumbItem","active","maxLength","len","val","length","RenderDish","top","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","date","CommentForm","isError","blured","values","ratings","handleSubmit","Row","md","Col","text","model","placeholder","validators","minLength","show","messages","select","textarea","rows","DishDetail","required","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","agree","contactType","message","resetFeedbackForm","role","size","offset","checkbox","style","resize","About","leader","learders","Media","tag","left","middle","object","body","heading","CardHeader","title","list","leadersFailed","errmess","payload","addLeaders","dishesFailed","addDishes","addComments","commentsFailed","promosFailed","addPromos","promos","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","exact","path","component","filter","featured","promotions","promo","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","rating","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","firstName","lastName","tel","contact","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","email","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a93d82f6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading...</p>\r\n        </div>\r\n    )\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {FadeTransform} from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if(isLoading) {\r\n        return (\r\n            <Loading />\r\n        )\r\n    } else if(errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        )\r\n    } else {\r\n        return (\r\n            <FadeTransform in transformProps={{\r\n                exitTransform: 'scale(0.2) translateY(-50%)'\r\n            }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    console.log(props)\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promosLoading} errMess={props.promosErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.leaders} isLoading={props.leadersLoading} errMess={props.leadersErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Form, FormGroup, Label, Input, Jumbotron, Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Header extends Component {\r\n    \r\n        state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n  \r\n\r\n    toggleNav = () => {\r\n        console.log(this)\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n    toggleModal = () => {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    //innerRef is used to pull out the value so it can be read across the component. ++New for Me++\r\n    handleLogin = (event) => {\r\n        this.toggleModal();\r\n        alert(`Username: ${this.username.value} and Passowrd: ${this.password.value} Remember: ${this.remember.checked}`);\r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} className=\"mr-2\" />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\">Loggin</span>\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                {/* InnerRef pulls out value and then is able to be called (line 31)  */}\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input}/>\r\n                                 \r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Username</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check> \r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input}/>\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/aboutus\">About</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/contactus\">Contact</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i> : +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i> : +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i> : <a href=\"mailto:confusion@food.net\">\r\n                                confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fas fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish, i) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n    if(props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    } else if(props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","import { Card, CardImg, CardText, CardBody, CardTitle, Form, FormGroup, Label, Breadcrumb, BreadcrumbItem, Button,  Modal, ModalHeader, ModalBody, Row, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './some.css'\r\nimport React, {Component} from 'react';\r\n// TASK 2--\r\nimport { Control, LocalForm, Errors } from 'react-redux-form'; \r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {FadeTransform, Fade, Stagger} from 'react-animation-components';\r\n// TASK 3--\r\nconst maxLength  = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength  = (len) => (val) => (val) && (val.length >= len);\r\n\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform in transformProps={{\r\n                exitTransform: 'scale(0.2) translateY(-50%)'\r\n            }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst RenderComments = ({ comments, postComment, dishId }) => {\r\n    if (comments != null)\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in >\r\n                    {comments.map(comment => {\r\n                        return (\r\n                            <Fade in>\r\n                                <li key={comment.id}>\r\n                                    <p>{comment.comment}</p>\r\n                                    <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', {\r\n                                    year: 'numeric',\r\n                                    month: 'short',\r\n                                    day: '2-digit'\r\n                                }).format(new Date(comment.date))}</p>\r\n                                </li>\r\n                            </Fade>\r\n                        )\r\n                    })}\r\n                    </Stagger>\r\n                    {/* TASK 1-- */}\r\n                <CommentForm dishId ={dishId} postComment={postComment}/>\r\n                </ul>\r\n            </div>);\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\n\r\n\r\n\r\n//TASK 1---\r\nclass CommentForm extends Component {\r\n    state = {\r\n        isModalOpen: false,\r\n        isError: null,\r\n        blured: false\r\n    };\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.ratings, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button color=\"secondary\" onClick={this.toggleModal}><span className=\"fa fa-pencil fa-md\">Submit Content</span></Button>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"author\" md={2}>First Name</Label>\r\n                                    {/* {TASK 3--} */}\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".author\" className=\"form-control\"  id=\"author\" name=\"author\" placeholder=\"First Name/Author\" validators={{minLength: minLength(3), maxLength: maxLength(15)}}/>\r\n                                        <Errors className=\"text-danger\" model=\".author\" show=\"touched\" messages={{minLength: 'Must be greater than 3 Characters', maxLength: 'Must be 15 Characters or less'}}/>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.select model=\".rating\" className=\"form-control\" id=\"rating\" name=\"rating\" placeholder=\"rating\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                        </Control.select>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"comment\" md={2}>Comment</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.textarea model=\".comment\" className=\"form-control\" rows=\"6\"  id=\"comment\" name=\"comment\" placeholder=\"comments\"/>\r\n                                        <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\" messages={{minLength: 'Must be greater than 6 numbers', maxLength: 'Must be 25 Numbers or less'}}/>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n        if(props.isLoading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if(props.errMess) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (props.dish !== null) {\r\n            return (\r\n                // TASK 2--\r\n                <div className=\"container\">\r\n                    \r\n\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RenderDish dish={props.dish} />\r\n                        <RenderComments comments={props.comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id}\r\n                        />\r\n                    </div> \r\n                </div>\r\n            )\r\n            } else {\r\n                return (\r\n                    <div></div>\r\n                );\r\n            }\r\n}\r\n\r\n\r\nexport default DishDetail;","import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Label, Col, FormFeedback} from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\n \r\nconst required = (val) => val && val.length;\r\nconst maxLength  = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength  = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n   \r\n    \r\n    handleSubmit = (values) => {\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.agree, values.contactType, values.message)\r\n        // console.log(\"Current state is:\" + JSON.stringify(values));\r\n        // alert(\"Current state is:\" + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n\r\n    }\r\n    \r\n    render() {\r\n        \r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact US</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                        <img src='https://www.thestatesman.com/wp-content/uploads/2020/04/googl_ED.jpg' alt=\"map\" width = \"400px\" height = \"300px\"></img>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n\r\n\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                 {/* valid={errors.firstname === ''} */}\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" className=\"form-control\"  id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" validators={{required, minLength: minLength(3), maxLength: maxLength(25)}}/>\r\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{required: 'Required', minLength: 'Must be greater than 2 Characters', maxLength: 'Must be 25 Characters or less'}}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" className=\"form-control\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" validators={{required, minLength: minLength(2), maxLength: maxLength(25) }} />\r\n                                    <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{required: 'Required', minLength: 'Must be greater than 2 Characters', maxLength: 'Must be 25 Characters or less'}}/>\r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" className=\"form-control\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. num\" validators={{required, minLength: minLength(9), maxLength: maxLength(15), isNumber}}/>\r\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\" messages={{required: 'Required', minLength: 'Must be greater than 6 numbers', maxLength: 'Must be 25 Numbers or less', isNumber: 'Must be a number'}}/>\r\n                                </Col>\r\n                            </Row>\r\n                                <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" className=\"form-control\" id=\"email\" name=\"email\" placeholder=\"john@doe.com\" validators={{required, validEmail}}/>\r\n                                    <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{required: 'Required', validEmail: 'Invalid email address'}}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" className=\"form-check-input\" name=\"agree\" /> {\" \"}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" style={{resize: 'none'}} name=\"message\" rows=\"12\" className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n   \r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {FadeTransform, Fade, Stagger} from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        if(props.leaders.isLoading) {\r\n            return(\r\n                <Loading />\r\n            )\r\n        } else if(props.leaders.errMess) {\r\n            return (\r\n                <h4>{props.learders.errMess}</h4>\r\n            )\r\n        } else {\r\n            return (\r\n                <div key={leader.id} className=\"col-12 mt-5\">\r\n    \r\n                <FadeTransform in transformProps={{\r\n                                exitTransform: 'scale(0.2) translateY(-50%)'\r\n                            }}>\r\n                        <Stagger in>\r\n                            <Media tag=\"li\">\r\n                                <Fade in>\r\n                                    <Media left middle>\r\n                                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                                    </Media>\r\n                                    <Media body className=\"ml-5\">\r\n                                        <Media heading>{leader.name}</Media>\r\n                                        <p>Leader {leader.designation}</p>\r\n                                        <p>{leader.description}</p>\r\n                                    </Media>\r\n                                </Fade>\r\n                            </Media>\r\n                        </Stagger>\r\n                    </FadeTransform>\r\n                </div>\r\n            );\r\n        };\r\n        })\r\n        \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\n\r\nexport const postFeedback = (firstName, lastName, tel, agree, contact, message) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        tel: tel,\r\n        agree: agree,\r\n        contact: contact,\r\n        message: message\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n     if(response.ok) {\r\n         return response;\r\n     } else {\r\n         //if the server sent an error back\r\n         let error = new Error(`Error  ${response.status}: ${response.statusText}`)\r\n         error.response = response;\r\n         throw error;\r\n     }\r\n },\r\n //if the server never responded\r\n error => {\r\n     let errmess = new Error(error.message);\r\n     throw errmess;\r\n })\r\n .then(response => response.json())\r\n .then(response => alert(`Thanks for your feedback ${JSON.stringify(response)}`))\r\n .catch(error => console.log('Post feedback' + error.message))\r\n }\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT, \r\n    payload: comment\r\n}); \r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n   const newComment = {\r\n    dishId: dishId,\r\n    rating: rating,\r\n    author: author,\r\n    comment: comment\r\n   }\r\n   newComment.date = new Date().toISOString();\r\n   return fetch(baseUrl + 'comments', {\r\n       method: 'POST',\r\n       body: JSON.stringify(newComment),\r\n       headers: {\r\n           'Content-Type': 'application/json'\r\n       },\r\n       credentials: 'same-origin'\r\n   })\r\n   .then(response => {\r\n    if(response.ok) {\r\n        return response;\r\n    } else {\r\n        //if the server sent an error back\r\n        let error = new Error(`Error  ${response.status}: ${response.statusText}`)\r\n        error.response = response;\r\n        throw error;\r\n    }\r\n},\r\n//if the server never responded\r\nerror => {\r\n    let errmess = new Error(error.message);\r\n    throw errmess;\r\n})\r\n.then(response => response.json())\r\n.then(response => dispatch(addComment(response)))\r\n.catch(error => console.log('Post comments' + error.message))\r\n}\r\n\r\n\r\n//leaders\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        } else {\r\n            //if the server sent an error back\r\n            let error = new Error(`Error  ${response.status}: ${response.statusText}`)\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    //if the server never responded\r\n    error => {\r\n        let errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(leaders => {dispatch(addLeaders(leaders))})\r\n    .catch(error => dispatch(leadersFailed(error.message)))\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'dishes').then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        } else {\r\n            //if the server sent an error back\r\n            let error = new Error(`Error  ${response.status}: ${response.statusText}`)\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    //if the server never responded\r\n    error => {\r\n        let errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(dishes => {dispatch(addDishes(dishes))})\r\n    .catch(error => dispatch(dishesFailed(error.message)))\r\n\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n//Comments\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        } else {\r\n            //if the server sent an error back\r\n            let error = new Error(`Error  ${response.status}: ${response.statusText}`)\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    //if the server never responded\r\n    error => {\r\n        let errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)))\r\n}\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\n//Promos\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        } else {\r\n            //if the server sent an error back\r\n            let error = new Error(`Error  ${response.status}: ${response.statusText}`)\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    //if the server never responded\r\n    error => {\r\n        let errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)))\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\n\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\n// leaders\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }  \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstName, lastName, tel, agree, contact, message) => dispatch(postFeedback(firstName, lastName, tel, agree, contact, message)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => { dispatch(fetchLeaders())}\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n \r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n  \r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter(promo => promo.featured)[0]}\r\n          promosLoading={this.props.promotions.isLoading}\r\n          promosErrMess={this.props.promotions.errMess}\r\n          leaders={this.props.leaders.leaders.filter(leader => leader.featured)[0]}\r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leadersErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n    //Route Parameters!\r\n    // Match is a parameter from the Route from line 53 (location + history are the to others that route auto passes)\r\n    const DishWithId = ({ match }) => {\r\n      //grabs the match params(which is set on line 56 \"menu/:dishId\") and in MenuComponent (<Link to={`/menu/${dish.id}`} >)\r\n      //this come in as a string so parseInt is used to convert to base10 and selects the value of the first index\r\n      return (\r\n        <DishDetail\r\n         dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n         isLoading={this.props.dishes.isLoading}\r\n         errMess={this.props.dishes.errMess}\r\n         comments={this.props.comments.comments.filter(comment => comment.dishId === parseInt(match.params.dishId, 10))}\r\n         commentsErrMess={this.props.comments.errMess}\r\n         postComment={this.props.postComment}\r\n        />\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path=\"/contactus\" component={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm}/>} />\r\n              <Route path=\"/home\" component={HomePage} />{/* if adding props with route must go through ann Fn's like shown here*/}\r\n              <Route path=\"/aboutus\" component={() => <About leaders={this.props.leaders} leadersLoading={this.props.leaders.isLoading} leadersErrMess={this.props.leaders.errMess} />} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Redirect to=\"/home\" /> {/* if nothing matches the routes */}\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch(action.type) {\r\n\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload}\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n                return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload}\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []}\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload}\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n                return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch(action.type) {\r\n\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload}\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n                return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import React, { Component } from 'react';\nimport Main from './components/MainComp';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  \n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }), applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}